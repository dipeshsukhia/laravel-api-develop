<?php

namespace App\Http\Resources\Traits;

use Illuminate\Http\Request;
use Illuminate\Http\Resources\MissingValue;

trait ApiResourceTrait
{
    /**
     * @var null
     */
    protected $message = null;

    /**
     * @param string $message
     * @return $this
     */
    public function setMessage(string $message): self
    {
        $this->message = $message;
        return $this;
    }

    /**
     * Get additional data that should be returned with the resource array.
     *
     * @param Request $request
     * @return array
     */
    public function with($request): array
    {
        if (is_null($this->message) && !$this->count()) {
            $this->setMessage('There are no data available.');
        }
        return [
            'success' => true,
            'message' => $this->message,
            'meta' => null,
            'errors' => null
        ];
    }

    /**
     * Retrieve a value when key Exists.
     *
     * @param $key
     * @param mixed $default
     * @return MissingValue|mixed
     */
    protected function whenExists($key, $default = null)
    {
        if (array_key_exists($key,$this->getAttributes())) {
            return value($this->{$key});
        }
        return func_num_args() === 2 ? value($default) : new MissingValue;
    }

    /**
     * Retrieve a manipulated value when key Exists.
     *
     * @param $key
     * @param $value
     * @return MissingValue|mixed
     */
    protected function whenExistsThan($key, $value)
    {
        if (array_key_exists($key,$this->getAttributes())) {
            return value($value);
        }
        return new MissingValue;
    }
}
